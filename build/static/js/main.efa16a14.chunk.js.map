{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["api","App","useState","query","setQuery","weather","setWeather","className","Container","main","Row","Col","xs","InputGroup","FormControl","placeholder","onChange","e","target","value","onKeyPress","evt","key","fetch","then","res","json","result","console","log","name","sys","country","Math","round","temp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4QAIMA,EACG,mCADHA,EAEI,2CAgEKC,MA7Df,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,OAEiBF,mBAAS,MAF1B,mBAENG,EAFM,KAEGC,EAFH,KAgBX,OACA,qBAAKC,UAAU,MAAf,SACE,eAACC,EAAA,EAAD,CAAWD,UAAYF,EACU,SAA5BA,EAAQA,QAAQ,GAAGI,KAAkB,gBACN,YAA5BJ,EAAQA,QAAQ,GAAGI,MAES,SAA5BJ,EAAQA,QAAQ,GAAGI,KACb,gBAAkB,gBAE1B,eAPN,UAQE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKC,GAAI,GAAT,SACI,cAACC,EAAA,EAAD,CAAYN,UAAU,2BAAtB,SACI,cAACO,EAAA,EAAD,CAAaP,UAAU,eACtBQ,YAAa,YACbC,SAAU,SAAAC,GAAC,OAAIb,EAASa,EAAEC,OAAOC,QACjCA,MAAOhB,EACPiB,WA7BF,SAACC,GACG,UAAZA,EAAIC,KACHC,MAAM,GAAD,OAAIvB,EAAJ,qBAAyBG,EAAzB,+BAAqDH,IACrDwB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACFrB,EAAWqB,GACXvB,EAAS,IACTwB,QAAQC,IAAIF,eA2BtB,cAACjB,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAKC,GAAI,GAAIL,UAAW,eAAxB,UACI,oBAAIA,UAAW,YAAf,SACKF,EAAWA,EAAQyB,KAAO,KAAOzB,EAAQ0B,IAAIC,QAAW,KAE7D,oBAAIzB,UAAW,OAAf,wCACEF,EACE,qBAAKE,UAAW,kBAAhB,SACI,qBAAIA,UAAW,cAAf,UACK0B,KAAKC,MAAM7B,EAAQI,KAAK0B,MAD7B,cAFK,GAOb,oBAAI5B,UAAW,oBAAf,SACKF,EAAWA,EAAQA,QAAQ,GAAGI,KAAQ,gBC/C5C2B,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.efa16a14.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\nimport {Col, Container, FormControl, InputGroup, Row} from \"react-bootstrap\";\n\nconst api = {\n    key: \"050f1f478868a2ca92fd19034bae70c5\",\n    base: \"https://api.openweathermap.org/data/2.5/\"\n}\n\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState(null);\n\n  const search = (evt: { key: string; }) => {\n      if(evt.key === \"Enter\"){\n          fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n              .then(res => res.json())\n              .then(result => {\n                  setWeather(result);\n                  setQuery('');\n                  console.log(result);\n              });\n      }\n  }\n\n    return (\n    <div className=\"App\">\n      <Container className={ weather ?\n          (weather.weather[0].main === \"Snow\" ? \"app-body snow\" : (\n              weather.weather[0].main === \"Drizzle\"\n              ||\n              weather.weather[0].main === \"Rain\"\n                  ? \"app-body rain\" : \"app-body warm\"\n          ))\n          : \"app-body day\"}>\n        <Row>\n          <Col xs={12}>\n              <InputGroup className=\"text-center search-group\">\n                  <FormControl className=\"search-input\"\n                   placeholder={\"Search...\"}\n                   onChange={e => setQuery(e.target.value)}\n                   value={query}\n                   onKeyPress={search}\n                  />\n              </InputGroup>\n          </Col>\n        </Row>\n        <Row>\n            <Col xs={12} className={\"weather-text\"}>\n                <h1 className={\"city-name\"}>\n                    {weather ? (weather.name + \", \" + weather.sys.country) : \"\"}\n                </h1>\n                <h3 className={\"date\"}>Feburary 15, 2020 - Monday</h3>\n                {!weather ? (\"\") : (\n                    <div className={\"temperature-box\"}>\n                        <h1 className={\"temperature\"}>\n                            {Math.round(weather.main.temp)}&deg; C\n                        </h1>\n                    </div>\n                )}\n                <h3 className={\"weather-condition\"}>\n                    {weather ? (weather.weather[0].main) : \"\"}\n                </h3>\n            </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}